{"ast":null,"code":"var _jsxFileName = \"/Users/Macbook/Documents/video-trimmer-git/src/components/RangeInput.js\";\nimport React from \"react\";\nimport * as helpers from \"../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RangeInput({\n  thumbNails,\n  rEnd,\n  rStart,\n  handleUpdaterStart,\n  handleUpdaterEnd,\n  loading,\n  control,\n  videoMeta\n}) {\n  let RANGE_MAX = 100;\n  if (thumbNails.length === 0 && !loading) {\n    return null;\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" processing thumbnails.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  const durationInSeconds = (rEnd - rStart) / RANGE_MAX * videoMeta.duration;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"range_pack\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image_box\",\n        children: [thumbNails.map((imgURL, id) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL,\n          alt: `sample_video_thumbnail_${id}`\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clip_box\",\n          style: {\n            width: `calc(${rEnd - rStart}% )`,\n            left: `${rStart}%`\n          },\n          \"data-start\": helpers.toTimeString(rStart / RANGE_MAX * videoMeta.duration, false),\n          \"data-end\": helpers.toTimeString(rEnd / RANGE_MAX * videoMeta.duration, false),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"clip_box_des\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"clip_box_des\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"range\",\n          type: \"range\",\n          min: 0,\n          max: RANGE_MAX,\n          onInput: handleUpdaterStart,\n          value: rStart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"range\",\n          type: \"range\",\n          min: 0,\n          max: RANGE_MAX,\n          onInput: handleUpdaterEnd,\n          value: rEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), control]\n  }, void 0, true);\n}\n_c = RangeInput;\nvar _c;\n$RefreshReg$(_c, \"RangeInput\");","map":{"version":3,"names":["React","helpers","jsxDEV","_jsxDEV","Fragment","_Fragment","RangeInput","thumbNails","rEnd","rStart","handleUpdaterStart","handleUpdaterEnd","loading","control","videoMeta","RANGE_MAX","length","children","fileName","_jsxFileName","lineNumber","columnNumber","durationInSeconds","duration","className","map","imgURL","id","src","alt","style","width","left","toTimeString","type","min","max","onInput","value","_c","$RefreshReg$"],"sources":["/Users/Macbook/Documents/video-trimmer-git/src/components/RangeInput.js"],"sourcesContent":["import React from \"react\";\nimport * as helpers from \"../utils/helpers\";\n\nexport default function RangeInput({\n  thumbNails,\n  rEnd,\n  rStart,\n  handleUpdaterStart,\n  handleUpdaterEnd,\n  loading,\n  control,\n  videoMeta,\n}) {\n  let RANGE_MAX = 100;\n\n  if (thumbNails.length === 0 && !loading) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <center>\n        <h2> processing thumbnails.....</h2>\n      </center>\n    );\n  }\n\n  const durationInSeconds = ((rEnd - rStart) / RANGE_MAX) * videoMeta.duration;\n\n  return (\n    <>\n      <div className=\"range_pack\">\n        <div className=\"image_box\">\n          {thumbNails.map((imgURL, id) => (\n            <img src={imgURL} alt={`sample_video_thumbnail_${id}`} key={id} />\n          ))}\n\n          <div\n            className=\"clip_box\"\n            style={{\n              width: `calc(${rEnd - rStart}% )`,\n              left: `${rStart}%`,\n            }}\n            data-start={helpers.toTimeString(\n              (rStart / RANGE_MAX) * videoMeta.duration,\n              false\n            )}\n            data-end={helpers.toTimeString(\n              (rEnd / RANGE_MAX) * videoMeta.duration,\n              false\n            )}\n          >\n            <span className=\"clip_box_des\"></span>\n            <span className=\"clip_box_des\"></span>\n          </div>\n\n          <input\n            className=\"range\"\n            type=\"range\"\n            min={0}\n            max={RANGE_MAX}\n            onInput={handleUpdaterStart}\n            value={rStart}\n          />\n          <input\n            className=\"range\"\n            type=\"range\"\n            min={0}\n            max={RANGE_MAX}\n            onInput={handleUpdaterEnd}\n            value={rEnd}\n          />\n        </div>\n      </div>\n\n      {control}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}