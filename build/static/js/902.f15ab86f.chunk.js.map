{"version":3,"file":"static/js/902.f15ab86f.chunk.js","mappings":"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","sources":["../node_modules/@ffmpeg/ffmpeg/dist/esm|lazy|groupOptions: {}|namespace object","../webpack/bootstrap","../webpack/runtime/hasOwnProperty shorthand","../node_modules/@ffmpeg/ffmpeg/dist/esm/const.js","../node_modules/@ffmpeg/ffmpeg/dist/esm/errors.js","../node_modules/@ffmpeg/ffmpeg/dist/esm/worker.js"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 189;\nmodule.exports = webpackEmptyAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const MIME_TYPE_JAVASCRIPT = \"text/javascript\";\nexport const MIME_TYPE_WASM = \"application/wasm\";\nexport const CORE_VERSION = \"0.12.1\";\nexport const CORE_URL = `https://unpkg.com/@ffmpeg/core@${CORE_VERSION}/dist/umd/ffmpeg-core.js`;\nexport var FFMessageType;\n(function (FFMessageType) {\n    FFMessageType[\"LOAD\"] = \"LOAD\";\n    FFMessageType[\"EXEC\"] = \"EXEC\";\n    FFMessageType[\"WRITE_FILE\"] = \"WRITE_FILE\";\n    FFMessageType[\"READ_FILE\"] = \"READ_FILE\";\n    FFMessageType[\"DELETE_FILE\"] = \"DELETE_FILE\";\n    FFMessageType[\"RENAME\"] = \"RENAME\";\n    FFMessageType[\"CREATE_DIR\"] = \"CREATE_DIR\";\n    FFMessageType[\"LIST_DIR\"] = \"LIST_DIR\";\n    FFMessageType[\"DELETE_DIR\"] = \"DELETE_DIR\";\n    FFMessageType[\"ERROR\"] = \"ERROR\";\n    FFMessageType[\"DOWNLOAD\"] = \"DOWNLOAD\";\n    FFMessageType[\"PROGRESS\"] = \"PROGRESS\";\n    FFMessageType[\"LOG\"] = \"LOG\";\n    FFMessageType[\"MOUNT\"] = \"MOUNT\";\n    FFMessageType[\"UNMOUNT\"] = \"UNMOUNT\";\n})(FFMessageType || (FFMessageType = {}));\n","export const ERROR_UNKNOWN_MESSAGE_TYPE = new Error(\"unknown message type\");\nexport const ERROR_NOT_LOADED = new Error(\"ffmpeg is not loaded, call `await ffmpeg.load()` first\");\nexport const ERROR_TERMINATED = new Error(\"called FFmpeg.terminate()\");\nexport const ERROR_IMPORT_FAILURE = new Error(\"failed to import ffmpeg-core.js\");\n","/// <reference no-default-lib=\"true\" />\n/// <reference lib=\"esnext\" />\n/// <reference lib=\"webworker\" />\nimport { CORE_URL, FFMessageType } from \"./const.js\";\nimport { ERROR_UNKNOWN_MESSAGE_TYPE, ERROR_NOT_LOADED, ERROR_IMPORT_FAILURE, } from \"./errors.js\";\nlet ffmpeg;\nconst load = async ({ coreURL: _coreURL = CORE_URL, wasmURL: _wasmURL, workerURL: _workerURL, }) => {\n    const first = !ffmpeg;\n    const coreURL = _coreURL;\n    const wasmURL = _wasmURL ? _wasmURL : _coreURL.replace(/.js$/g, \".wasm\");\n    const workerURL = _workerURL\n        ? _workerURL\n        : _coreURL.replace(/.js$/g, \".worker.js\");\n    try {\n        // when web worker type is `classic`.\n        importScripts(coreURL);\n    }\n    catch {\n        // when web worker type is `module`.\n        self.createFFmpegCore = (await import(\n        /* @vite-ignore */ coreURL)).default;\n        if (!self.createFFmpegCore) {\n            throw ERROR_IMPORT_FAILURE;\n        }\n    }\n    ffmpeg = await self.createFFmpegCore({\n        // Fix `Overload resolution failed.` when using multi-threaded ffmpeg-core.\n        // Encoded wasmURL and workerURL in the URL as a hack to fix locateFile issue.\n        mainScriptUrlOrBlob: `${coreURL}#${btoa(JSON.stringify({ wasmURL, workerURL }))}`,\n    });\n    ffmpeg.setLogger((data) => self.postMessage({ type: FFMessageType.LOG, data }));\n    ffmpeg.setProgress((data) => self.postMessage({\n        type: FFMessageType.PROGRESS,\n        data,\n    }));\n    return first;\n};\nconst exec = ({ args, timeout = -1 }) => {\n    ffmpeg.setTimeout(timeout);\n    ffmpeg.exec(...args);\n    const ret = ffmpeg.ret;\n    ffmpeg.reset();\n    return ret;\n};\nconst writeFile = ({ path, data }) => {\n    ffmpeg.FS.writeFile(path, data);\n    return true;\n};\nconst readFile = ({ path, encoding }) => ffmpeg.FS.readFile(path, { encoding });\n// TODO: check if deletion works.\nconst deleteFile = ({ path }) => {\n    ffmpeg.FS.unlink(path);\n    return true;\n};\nconst rename = ({ oldPath, newPath }) => {\n    ffmpeg.FS.rename(oldPath, newPath);\n    return true;\n};\n// TODO: check if creation works.\nconst createDir = ({ path }) => {\n    ffmpeg.FS.mkdir(path);\n    return true;\n};\nconst listDir = ({ path }) => {\n    const names = ffmpeg.FS.readdir(path);\n    const nodes = [];\n    for (const name of names) {\n        const stat = ffmpeg.FS.stat(`${path}/${name}`);\n        const isDir = ffmpeg.FS.isDir(stat.mode);\n        nodes.push({ name, isDir });\n    }\n    return nodes;\n};\n// TODO: check if deletion works.\nconst deleteDir = ({ path }) => {\n    ffmpeg.FS.rmdir(path);\n    return true;\n};\nconst mount = ({ fsType, options, mountPoint }) => {\n    let str = fsType;\n    let fs = ffmpeg.FS.filesystems[str];\n    if (!fs)\n        return false;\n    ffmpeg.FS.mount(fs, options, mountPoint);\n    return true;\n};\nconst unmount = ({ mountPoint }) => {\n    ffmpeg.FS.unmount(mountPoint);\n    return true;\n};\nself.onmessage = async ({ data: { id, type, data: _data }, }) => {\n    const trans = [];\n    let data;\n    try {\n        if (type !== FFMessageType.LOAD && !ffmpeg)\n            throw ERROR_NOT_LOADED;\n        switch (type) {\n            case FFMessageType.LOAD:\n                data = await load(_data);\n                break;\n            case FFMessageType.EXEC:\n                data = exec(_data);\n                break;\n            case FFMessageType.WRITE_FILE:\n                data = writeFile(_data);\n                break;\n            case FFMessageType.READ_FILE:\n                data = readFile(_data);\n                break;\n            case FFMessageType.DELETE_FILE:\n                data = deleteFile(_data);\n                break;\n            case FFMessageType.RENAME:\n                data = rename(_data);\n                break;\n            case FFMessageType.CREATE_DIR:\n                data = createDir(_data);\n                break;\n            case FFMessageType.LIST_DIR:\n                data = listDir(_data);\n                break;\n            case FFMessageType.DELETE_DIR:\n                data = deleteDir(_data);\n                break;\n            case FFMessageType.MOUNT:\n                data = mount(_data);\n                break;\n            case FFMessageType.UNMOUNT:\n                data = unmount(_data);\n                break;\n            default:\n                throw ERROR_UNKNOWN_MESSAGE_TYPE;\n        }\n    }\n    catch (e) {\n        self.postMessage({\n            id,\n            type: FFMessageType.ERROR,\n            data: e.toString(),\n        });\n        return;\n    }\n    if (data instanceof Uint8Array) {\n        trans.push(data.buffer);\n    }\n    self.postMessage({ id, type, data }, trans);\n};\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","o","obj","prop","Object","prototype","hasOwnProperty","call","CORE_URL","concat","FFMessageType","ERROR_UNKNOWN_MESSAGE_TYPE","ERROR_NOT_LOADED","ERROR_IMPORT_FAILURE","ffmpeg","self","onmessage","async","data","type","_data","_ref12","trans","LOAD","coreURL","_coreURL","wasmURL","_wasmURL","workerURL","_workerURL","_ref","first","replace","importScripts","createFFmpegCore","default","mainScriptUrlOrBlob","btoa","JSON","stringify","setLogger","postMessage","LOG","setProgress","PROGRESS","load","EXEC","_ref2","args","timeout","setTimeout","exec","ret","reset","WRITE_FILE","_ref3","path","FS","writeFile","READ_FILE","_ref4","encoding","readFile","DELETE_FILE","_ref5","unlink","deleteFile","RENAME","_ref6","oldPath","newPath","rename","CREATE_DIR","_ref7","mkdir","createDir","LIST_DIR","_ref8","names","readdir","nodes","name","stat","isDir","mode","push","listDir","DELETE_DIR","_ref9","rmdir","deleteDir","MOUNT","_ref10","fsType","options","mountPoint","str","fs","filesystems","mount","UNMOUNT","_ref11","unmount","ERROR","toString","Uint8Array","buffer"],"sourceRoot":""}